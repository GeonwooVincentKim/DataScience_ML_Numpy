미분 설명 틀린 것
-> 경사상승 및 경사하강 방법은 극값에 도달하면 다시 반대로 움직임

경사하강법 옳은 것
-> 벡터가 입력인 다변수 함수의 경우 편미분을 사용할 수 없음

아래 코드의 실행 결과로 옳은 것
sympy.diif(sympy.poly(x**2 + 2*x*y + 3) + sympy.cos(x + 2*y), x)
-> 2*x + 2*y - sin(x + 2*y)

역전파 설명 틀린 것
-> 각 층 패러미터의 그레디언트 벡터는 입력층부터 출력층 순으로 계산

np.array([[1, 2, 0], [-1, 0, 1], [-10, 0, 10]]) 을 원-핫 벡터로 만든 결과로 옳은 것
-> array([[0, 1, 0], [0, 0, 1], [0, 0, 1]])

MLP 옳은 것
-> 예상되는 입력 데이터와 실제 타겟의 차이를 통해 손실 함수 구성 가능
